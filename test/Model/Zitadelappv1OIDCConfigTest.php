<?php
/**
 * Zitadelappv1OIDCConfigTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace ArthurHlt\Zitadel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * Zitadelappv1OIDCConfigTest Class Doc Comment
 *
 * @category    Class
 * @description Zitadelappv1OIDCConfig
 * @package     ArthurHlt\Zitadel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class Zitadelappv1OIDCConfigTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Zitadelappv1OIDCConfig"
     */
    public function testZitadelappv1OIDCConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "redirectUris"
     */
    public function testPropertyRedirectUris()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "responseTypes"
     */
    public function testPropertyResponseTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grantTypes"
     */
    public function testPropertyGrantTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "appType"
     */
    public function testPropertyAppType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "clientId"
     */
    public function testPropertyClientId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authMethodType"
     */
    public function testPropertyAuthMethodType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "postLogoutRedirectUris"
     */
    public function testPropertyPostLogoutRedirectUris()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "noneCompliant"
     */
    public function testPropertyNoneCompliant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "complianceProblems"
     */
    public function testPropertyComplianceProblems()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "devMode"
     */
    public function testPropertyDevMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accessTokenType"
     */
    public function testPropertyAccessTokenType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accessTokenRoleAssertion"
     */
    public function testPropertyAccessTokenRoleAssertion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "idTokenRoleAssertion"
     */
    public function testPropertyIdTokenRoleAssertion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "idTokenUserinfoAssertion"
     */
    public function testPropertyIdTokenUserinfoAssertion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "clockSkew"
     */
    public function testPropertyClockSkew()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additionalOrigins"
     */
    public function testPropertyAdditionalOrigins()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowedOrigins"
     */
    public function testPropertyAllowedOrigins()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "skipNativeAppSuccessPage"
     */
    public function testPropertySkipNativeAppSuccessPage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backChannelLogoutUri"
     */
    public function testPropertyBackChannelLogoutUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loginVersion"
     */
    public function testPropertyLoginVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
