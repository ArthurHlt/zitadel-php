<?php
/**
 * V1UpdateCustomLoginPolicyRequestTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace ArthurHlt\Zitadel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * V1UpdateCustomLoginPolicyRequestTest Class Doc Comment
 *
 * @category    Class
 * @description V1UpdateCustomLoginPolicyRequest
 * @package     ArthurHlt\Zitadel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class V1UpdateCustomLoginPolicyRequestTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "V1UpdateCustomLoginPolicyRequest"
     */
    public function testV1UpdateCustomLoginPolicyRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowUsernamePassword"
     */
    public function testPropertyAllowUsernamePassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowRegister"
     */
    public function testPropertyAllowRegister()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowExternalIdp"
     */
    public function testPropertyAllowExternalIdp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "forceMfa"
     */
    public function testPropertyForceMfa()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passwordlessType"
     */
    public function testPropertyPasswordlessType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hidePasswordReset"
     */
    public function testPropertyHidePasswordReset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ignoreUnknownUsernames"
     */
    public function testPropertyIgnoreUnknownUsernames()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultRedirectUri"
     */
    public function testPropertyDefaultRedirectUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passwordCheckLifetime"
     */
    public function testPropertyPasswordCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "externalLoginCheckLifetime"
     */
    public function testPropertyExternalLoginCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mfaInitSkipLifetime"
     */
    public function testPropertyMfaInitSkipLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "secondFactorCheckLifetime"
     */
    public function testPropertySecondFactorCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multiFactorCheckLifetime"
     */
    public function testPropertyMultiFactorCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowDomainDiscovery"
     */
    public function testPropertyAllowDomainDiscovery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableLoginWithEmail"
     */
    public function testPropertyDisableLoginWithEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableLoginWithPhone"
     */
    public function testPropertyDisableLoginWithPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "forceMfaLocalOnly"
     */
    public function testPropertyForceMfaLocalOnly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
