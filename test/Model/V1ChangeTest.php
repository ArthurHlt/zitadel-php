<?php
/**
 * V1ChangeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace ArthurHlt\Zitadel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * V1ChangeTest Class Doc Comment
 *
 * @category    Class
 * @description V1Change
 * @package     ArthurHlt\Zitadel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class V1ChangeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "V1Change"
     */
    public function testV1Change()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "changeDate"
     */
    public function testPropertyChangeDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eventType"
     */
    public function testPropertyEventType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sequence"
     */
    public function testPropertySequence()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "editorId"
     */
    public function testPropertyEditorId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "editorDisplayName"
     */
    public function testPropertyEditorDisplayName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "resourceOwnerId"
     */
    public function testPropertyResourceOwnerId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "editorPreferredLoginName"
     */
    public function testPropertyEditorPreferredLoginName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "editorAvatarUrl"
     */
    public function testPropertyEditorAvatarUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
