<?php
/**
 * Featurev2GetInstanceFeaturesResponseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace ArthurHlt\Zitadel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * Featurev2GetInstanceFeaturesResponseTest Class Doc Comment
 *
 * @category    Class
 * @description Featurev2GetInstanceFeaturesResponse
 * @package     ArthurHlt\Zitadel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class Featurev2GetInstanceFeaturesResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Featurev2GetInstanceFeaturesResponse"
     */
    public function testFeaturev2GetInstanceFeaturesResponse()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "details"
     */
    public function testPropertyDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loginDefaultOrg"
     */
    public function testPropertyLoginDefaultOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oidcTriggerIntrospectionProjections"
     */
    public function testPropertyOidcTriggerIntrospectionProjections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oidcLegacyIntrospection"
     */
    public function testPropertyOidcLegacyIntrospection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userSchema"
     */
    public function testPropertyUserSchema()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oidcTokenExchange"
     */
    public function testPropertyOidcTokenExchange()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "actions"
     */
    public function testPropertyActions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "improvedPerformance"
     */
    public function testPropertyImprovedPerformance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webKey"
     */
    public function testPropertyWebKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "debugOidcParentError"
     */
    public function testPropertyDebugOidcParentError()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oidcSingleV1SessionTermination"
     */
    public function testPropertyOidcSingleV1SessionTermination()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableUserTokenEvent"
     */
    public function testPropertyDisableUserTokenEvent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enableBackChannelLogout"
     */
    public function testPropertyEnableBackChannelLogout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loginV2"
     */
    public function testPropertyLoginV2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "permissionCheckV2"
     */
    public function testPropertyPermissionCheckV2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consoleUseV2UserApi"
     */
    public function testPropertyConsoleUseV2UserApi()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
