<?php
/**
 * V1UpdateCustomLabelPolicyRequestTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace ArthurHlt\Zitadel\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * V1UpdateCustomLabelPolicyRequestTest Class Doc Comment
 *
 * @category    Class
 * @description V1UpdateCustomLabelPolicyRequest
 * @package     ArthurHlt\Zitadel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class V1UpdateCustomLabelPolicyRequestTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "V1UpdateCustomLabelPolicyRequest"
     */
    public function testV1UpdateCustomLabelPolicyRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "primaryColor"
     */
    public function testPropertyPrimaryColor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hideLoginNameSuffix"
     */
    public function testPropertyHideLoginNameSuffix()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warnColor"
     */
    public function testPropertyWarnColor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backgroundColor"
     */
    public function testPropertyBackgroundColor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fontColor"
     */
    public function testPropertyFontColor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "primaryColorDark"
     */
    public function testPropertyPrimaryColorDark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backgroundColorDark"
     */
    public function testPropertyBackgroundColorDark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warnColorDark"
     */
    public function testPropertyWarnColorDark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fontColorDark"
     */
    public function testPropertyFontColorDark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableWatermark"
     */
    public function testPropertyDisableWatermark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "themeMode"
     */
    public function testPropertyThemeMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
