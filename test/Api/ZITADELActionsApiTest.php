<?php
/**
 * ZITADELActionsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ArthurHlt\Zitadel\Test\Api;

use \ArthurHlt\Zitadel\Configuration;
use \ArthurHlt\Zitadel\ApiException;
use \ArthurHlt\Zitadel\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ZITADELActionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ZITADELActionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for zITADELActionsCreateTarget
     *
     * Create a target.
     *
     */
    public function testZITADELActionsCreateTarget()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsDeleteTarget
     *
     * Delete a target.
     *
     */
    public function testZITADELActionsDeleteTarget()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsGetTarget
     *
     * Target by ID.
     *
     */
    public function testZITADELActionsGetTarget()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsListExecutionFunctions
     *
     * List all available functions.
     *
     */
    public function testZITADELActionsListExecutionFunctions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsListExecutionMethods
     *
     * List all available methods.
     *
     */
    public function testZITADELActionsListExecutionMethods()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsListExecutionServices
     *
     * List all available service.
     *
     */
    public function testZITADELActionsListExecutionServices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsPatchTarget
     *
     * Patch a target.
     *
     */
    public function testZITADELActionsPatchTarget()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsSearchExecutions
     *
     * Search executions.
     *
     */
    public function testZITADELActionsSearchExecutions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsSearchTargets
     *
     * Search targets.
     *
     */
    public function testZITADELActionsSearchTargets()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zITADELActionsSetExecution
     *
     * Sets an execution to call a target or include the targets of another execution..
     *
     */
    public function testZITADELActionsSetExecution()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
