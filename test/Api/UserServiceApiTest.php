<?php
/**
 * UserServiceApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ArthurHlt\Zitadel\Test\Api;

use \ArthurHlt\Zitadel\Configuration;
use \ArthurHlt\Zitadel\ApiException;
use \ArthurHlt\Zitadel\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserServiceApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserServiceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for userServiceAddHumanUser
     *
     * Create a new human user.
     *
     */
    public function testUserServiceAddHumanUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddHumanUser_0
     *
     * Create a new human user.
     *
     */
    public function testUserServiceAddHumanUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddIDPLink
     *
     * Add link to an identity provider to an user.
     *
     */
    public function testUserServiceAddIDPLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddIDPLink_0
     *
     * Add link to an identity provider to an user.
     *
     */
    public function testUserServiceAddIDPLink0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddOTPEmail
     *
     * Add OTP Email for a user.
     *
     */
    public function testUserServiceAddOTPEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddOTPEmail_0
     *
     * Add OTP Email for a user.
     *
     */
    public function testUserServiceAddOTPEmail0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddOTPSMS
     *
     * Add OTP SMS for a user.
     *
     */
    public function testUserServiceAddOTPSMS()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceAddOTPSMS_0
     *
     * Add OTP SMS for a user.
     *
     */
    public function testUserServiceAddOTPSMS0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceCreateInviteCode
     *
     * Create an invite code for a user.
     *
     */
    public function testUserServiceCreateInviteCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceCreatePasskeyRegistrationLink
     *
     * Create a passkey registration link for a user.
     *
     */
    public function testUserServiceCreatePasskeyRegistrationLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceCreatePasskeyRegistrationLink_0
     *
     * Create a passkey registration link for a user.
     *
     */
    public function testUserServiceCreatePasskeyRegistrationLink0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceDeactivateUser
     *
     * Deactivate user.
     *
     */
    public function testUserServiceDeactivateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceDeactivateUser_0
     *
     * Deactivate user.
     *
     */
    public function testUserServiceDeactivateUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceDeleteUser
     *
     * Delete user.
     *
     */
    public function testUserServiceDeleteUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceDeleteUser_0
     *
     * Delete user.
     *
     */
    public function testUserServiceDeleteUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceGetUserByID
     *
     * User by ID.
     *
     */
    public function testUserServiceGetUserByID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceGetUserByID_0
     *
     * User by ID.
     *
     */
    public function testUserServiceGetUserByID0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceHumanMFAInitSkipped
     *
     * MFA Init Skipped.
     *
     */
    public function testUserServiceHumanMFAInitSkipped()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListAuthenticationFactors
     *
     * .
     *
     */
    public function testUserServiceListAuthenticationFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListAuthenticationMethodTypes
     *
     * List all possible authentication methods of a user.
     *
     */
    public function testUserServiceListAuthenticationMethodTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListAuthenticationMethodTypes_0
     *
     * List all possible authentication methods of a user.
     *
     */
    public function testUserServiceListAuthenticationMethodTypes0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListIDPLinks
     *
     * List links to an identity provider of an user.
     *
     */
    public function testUserServiceListIDPLinks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListPasskeys
     *
     * List passkeys of an user.
     *
     */
    public function testUserServiceListPasskeys()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListUsers
     *
     * Search Users.
     *
     */
    public function testUserServiceListUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceListUsers_0
     *
     * Search Users.
     *
     */
    public function testUserServiceListUsers0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceLockUser
     *
     * Lock user.
     *
     */
    public function testUserServiceLockUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceLockUser_0
     *
     * Lock user.
     *
     */
    public function testUserServiceLockUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServicePasswordReset
     *
     * Request a code to reset a password.
     *
     */
    public function testUserServicePasswordReset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServicePasswordReset_0
     *
     * Request a code to reset a password.
     *
     */
    public function testUserServicePasswordReset0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceReactivateUser
     *
     * Reactivate user.
     *
     */
    public function testUserServiceReactivateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceReactivateUser_0
     *
     * Reactivate user.
     *
     */
    public function testUserServiceReactivateUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRegisterPasskey
     *
     * Start the registration of passkey for a user.
     *
     */
    public function testUserServiceRegisterPasskey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRegisterPasskey_0
     *
     * Start the registration of passkey for a user.
     *
     */
    public function testUserServiceRegisterPasskey0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRegisterTOTP
     *
     * Start the registration of a TOTP generator for a user.
     *
     */
    public function testUserServiceRegisterTOTP()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRegisterTOTP_0
     *
     * Start the registration of a TOTP generator for a user.
     *
     */
    public function testUserServiceRegisterTOTP0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRegisterU2F
     *
     * Start the registration of a u2f token for a user.
     *
     */
    public function testUserServiceRegisterU2F()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRegisterU2F_0
     *
     * Start the registration of a u2f token for a user.
     *
     */
    public function testUserServiceRegisterU2F0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveIDPLink
     *
     * Remove link of an identity provider to an user.
     *
     */
    public function testUserServiceRemoveIDPLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveOTPEmail
     *
     * Remove One-Time Password (OTP) Email from a user.
     *
     */
    public function testUserServiceRemoveOTPEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveOTPEmail_0
     *
     * Remove One-Time Password (OTP) Email from a user.
     *
     */
    public function testUserServiceRemoveOTPEmail0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveOTPSMS
     *
     * Remove One-Time Password (OTP) SMS from a user.
     *
     */
    public function testUserServiceRemoveOTPSMS()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveOTPSMS_0
     *
     * Remove One-Time Password (OTP) SMS from a user.
     *
     */
    public function testUserServiceRemoveOTPSMS0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemovePasskey
     *
     * Remove passkey from a user.
     *
     */
    public function testUserServiceRemovePasskey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemovePhone
     *
     * Delete the user phone.
     *
     */
    public function testUserServiceRemovePhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemovePhone_0
     *
     * Delete the user phone.
     *
     */
    public function testUserServiceRemovePhone0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveTOTP
     *
     * Remove TOTP generator from a user.
     *
     */
    public function testUserServiceRemoveTOTP()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveTOTP_0
     *
     * Remove TOTP generator from a user.
     *
     */
    public function testUserServiceRemoveTOTP0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRemoveU2F
     *
     * Remove u2f token from a user.
     *
     */
    public function testUserServiceRemoveU2F()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceResendEmailCode
     *
     * Resend code to verify user email.
     *
     */
    public function testUserServiceResendEmailCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceResendEmailCode_0
     *
     * Resend code to verify user email.
     *
     */
    public function testUserServiceResendEmailCode0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceResendInviteCode
     *
     * Resend an invite code for a user.
     *
     */
    public function testUserServiceResendInviteCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceResendPhoneCode
     *
     * Resend code to verify user phone.
     *
     */
    public function testUserServiceResendPhoneCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceResendPhoneCode_0
     *
     * Resend code to verify user phone.
     *
     */
    public function testUserServiceResendPhoneCode0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRetrieveIdentityProviderIntent
     *
     * Retrieve the information returned by the identity provider.
     *
     */
    public function testUserServiceRetrieveIdentityProviderIntent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceRetrieveIdentityProviderIntent_0
     *
     * Retrieve the information returned by the identity provider.
     *
     */
    public function testUserServiceRetrieveIdentityProviderIntent0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSendEmailCode
     *
     * Send code to verify user email.
     *
     */
    public function testUserServiceSendEmailCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSetEmail
     *
     * Change the user email.
     *
     */
    public function testUserServiceSetEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSetEmail_0
     *
     * Change the user email.
     *
     */
    public function testUserServiceSetEmail0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSetPassword
     *
     * Change password.
     *
     */
    public function testUserServiceSetPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSetPassword_0
     *
     * Change password.
     *
     */
    public function testUserServiceSetPassword0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSetPhone
     *
     * Set the user phone.
     *
     */
    public function testUserServiceSetPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceSetPhone_0
     *
     * Set the user phone.
     *
     */
    public function testUserServiceSetPhone0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceStartIdentityProviderIntent
     *
     * Start flow with an identity provider.
     *
     */
    public function testUserServiceStartIdentityProviderIntent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceStartIdentityProviderIntent_0
     *
     * Start flow with an identity provider.
     *
     */
    public function testUserServiceStartIdentityProviderIntent0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceUnlockUser
     *
     * Unlock user.
     *
     */
    public function testUserServiceUnlockUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceUnlockUser_0
     *
     * Unlock user.
     *
     */
    public function testUserServiceUnlockUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceUpdateHumanUser
     *
     * Update User.
     *
     */
    public function testUserServiceUpdateHumanUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceUpdateHumanUser_0
     *
     * Update User.
     *
     */
    public function testUserServiceUpdateHumanUser0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyEmail
     *
     * Verify the email.
     *
     */
    public function testUserServiceVerifyEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyEmail_0
     *
     * Verify the email.
     *
     */
    public function testUserServiceVerifyEmail0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyInviteCode
     *
     * Verify an invite code for a user.
     *
     */
    public function testUserServiceVerifyInviteCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyPasskeyRegistration
     *
     * Verify a passkey for a user.
     *
     */
    public function testUserServiceVerifyPasskeyRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyPasskeyRegistration_0
     *
     * Verify a passkey for a user.
     *
     */
    public function testUserServiceVerifyPasskeyRegistration0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyPhone
     *
     * Verify the phone.
     *
     */
    public function testUserServiceVerifyPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyPhone_0
     *
     * Verify the phone.
     *
     */
    public function testUserServiceVerifyPhone0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyTOTPRegistration
     *
     * Verify a TOTP generator for a user.
     *
     */
    public function testUserServiceVerifyTOTPRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyTOTPRegistration_0
     *
     * Verify a TOTP generator for a user.
     *
     */
    public function testUserServiceVerifyTOTPRegistration0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyU2FRegistration
     *
     * Verify a u2f token for a user.
     *
     */
    public function testUserServiceVerifyU2FRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userServiceVerifyU2FRegistration_0
     *
     * Verify a u2f token for a user.
     *
     */
    public function testUserServiceVerifyU2FRegistration0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
