<?php
/**
 * PasswordSettingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ArthurHlt\Zitadel\Test\Api;

use \ArthurHlt\Zitadel\Configuration;
use \ArthurHlt\Zitadel\ApiException;
use \ArthurHlt\Zitadel\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PasswordSettingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PasswordSettingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminServiceGetLockoutPolicy
     *
     * Get Password Lockout Settings.
     *
     */
    public function testAdminServiceGetLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetPasswordAgePolicy
     *
     * Get Password Age Settings.
     *
     */
    public function testAdminServiceGetPasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetPasswordComplexityPolicy
     *
     * Get Password Complexity Settings.
     *
     */
    public function testAdminServiceGetPasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateLockoutPolicy
     *
     * Update Password Lockout Settings.
     *
     */
    public function testAdminServiceUpdateLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdatePasswordAgePolicy
     *
     * Update Password Age Settings.
     *
     */
    public function testAdminServiceUpdatePasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdatePasswordComplexityPolicy
     *
     * Update Password Complexity Settings.
     *
     */
    public function testAdminServiceUpdatePasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomLockoutPolicy
     *
     * Add Password Lockout Settings.
     *
     */
    public function testManagementServiceAddCustomLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomPasswordAgePolicy
     *
     * Add Password Age Settings.
     *
     */
    public function testManagementServiceAddCustomPasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomPasswordComplexityPolicy
     *
     * Create Password Complexity Settings.
     *
     */
    public function testManagementServiceAddCustomPasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultLockoutPolicy
     *
     * Get Default Password Lockout Settings.
     *
     */
    public function testManagementServiceGetDefaultLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultPasswordAgePolicy
     *
     * Get Default Password Age Settings.
     *
     */
    public function testManagementServiceGetDefaultPasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultPasswordComplexityPolicy
     *
     * Get Default Password Complexity Settings.
     *
     */
    public function testManagementServiceGetDefaultPasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetLockoutPolicyToDefault
     *
     * Reset Password Lockout Settings to Default.
     *
     */
    public function testManagementServiceResetLockoutPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetPasswordAgePolicyToDefault
     *
     * Reset Password Age Settings to Default.
     *
     */
    public function testManagementServiceResetPasswordAgePolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetPasswordComplexityPolicyToDefault
     *
     * Reset Password Complexity Settings to Default.
     *
     */
    public function testManagementServiceResetPasswordComplexityPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceUpdateCustomLockoutPolicy
     *
     * Update Password Lockout Settings.
     *
     */
    public function testManagementServiceUpdateCustomLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
