<?php
/**
 * OrganizationsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ArthurHlt\Zitadel\Test\Api;

use \ArthurHlt\Zitadel\Configuration;
use \ArthurHlt\Zitadel\ApiException;
use \ArthurHlt\Zitadel\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrganizationsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrganizationsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminServiceAddCustomDomainPolicy
     *
     * Set a Domain Settings for an Organization.
     *
     */
    public function testAdminServiceAddCustomDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetCustomDomainPolicy
     *
     * Get Domain Settings for Organization.
     *
     */
    public function testAdminServiceGetCustomDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetDefaultOrg
     *
     * Get Default Organization.
     *
     */
    public function testAdminServiceGetDefaultOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetOrgByID
     *
     * Get Organization By ID.
     *
     */
    public function testAdminServiceGetOrgByID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceIsOrgUnique
     *
     * Is Organization Unique.
     *
     */
    public function testAdminServiceIsOrgUnique()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceListOrgs
     *
     * Search Organization.
     *
     */
    public function testAdminServiceListOrgs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveOrg
     *
     * Remove Organization.
     *
     */
    public function testAdminServiceRemoveOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceResetCustomDomainPolicyToDefault
     *
     * Reset Domain Settings of Organization.
     *
     */
    public function testAdminServiceResetCustomDomainPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceSetDefaultOrg
     *
     * Set Default Organization.
     *
     */
    public function testAdminServiceSetDefaultOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceSetUpOrg
     *
     * Setup Organization.
     *
     */
    public function testAdminServiceSetUpOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateCustomDomainPolicy
     *
     * Update Domain Settings for Organization.
     *
     */
    public function testAdminServiceUpdateCustomDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddOrg
     *
     * Create Organization.
     *
     */
    public function testManagementServiceAddOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddOrgDomain
     *
     * Add Domain.
     *
     */
    public function testManagementServiceAddOrgDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddOrgMember
     *
     * Add Organization Member.
     *
     */
    public function testManagementServiceAddOrgMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceBulkRemoveOrgMetadata
     *
     * Bulk Delete Metadata.
     *
     */
    public function testManagementServiceBulkRemoveOrgMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceBulkSetOrgMetadata
     *
     * Bulk Set Organization Metadata.
     *
     */
    public function testManagementServiceBulkSetOrgMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceDeactivateOrg
     *
     * Deactivate Organization.
     *
     */
    public function testManagementServiceDeactivateOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGenerateOrgDomainValidation
     *
     * Generate Domain Verification.
     *
     */
    public function testManagementServiceGenerateOrgDomainValidation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetMyOrg
     *
     * Get My Organization.
     *
     */
    public function testManagementServiceGetMyOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetOrgByDomainGlobal
     *
     * Get Organization By Domain.
     *
     */
    public function testManagementServiceGetOrgByDomainGlobal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetOrgMetadata
     *
     * Get Organization Metadata By Key.
     *
     */
    public function testManagementServiceGetOrgMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceListOrgChanges
     *
     * Get Organization History.
     *
     */
    public function testManagementServiceListOrgChanges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceListOrgDomains
     *
     * Search Domains.
     *
     */
    public function testManagementServiceListOrgDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceListOrgMemberRoles
     *
     * List Organization Member Roles.
     *
     */
    public function testManagementServiceListOrgMemberRoles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceListOrgMembers
     *
     * List Organization Members.
     *
     */
    public function testManagementServiceListOrgMembers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceListOrgMetadata
     *
     * Search Organization Metadata.
     *
     */
    public function testManagementServiceListOrgMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceReactivateOrg
     *
     * Reactivate Organization.
     *
     */
    public function testManagementServiceReactivateOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveOrg
     *
     * Delete Organization.
     *
     */
    public function testManagementServiceRemoveOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveOrgDomain
     *
     * Remove Domain.
     *
     */
    public function testManagementServiceRemoveOrgDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveOrgMember
     *
     * Remove Organization Member.
     *
     */
    public function testManagementServiceRemoveOrgMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveOrgMetadata
     *
     * Delete Organization Metadata By Key.
     *
     */
    public function testManagementServiceRemoveOrgMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceSetOrgMetadata
     *
     * Set Organization Metadata.
     *
     */
    public function testManagementServiceSetOrgMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceSetPrimaryOrgDomain
     *
     * Set Primary Domain.
     *
     */
    public function testManagementServiceSetPrimaryOrgDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceUpdateOrg
     *
     * Update Organization.
     *
     */
    public function testManagementServiceUpdateOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceUpdateOrgMember
     *
     * Update Organization Member.
     *
     */
    public function testManagementServiceUpdateOrgMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceValidateOrgDomain
     *
     * Verify Domain.
     *
     */
    public function testManagementServiceValidateOrgDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
