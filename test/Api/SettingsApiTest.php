<?php
/**
 * SettingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ArthurHlt\Zitadel\Test\Api;

use \ArthurHlt\Zitadel\Configuration;
use \ArthurHlt\Zitadel\ApiException;
use \ArthurHlt\Zitadel\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SettingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArthurHlt\Zitadel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SettingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminServiceActivateLabelPolicy
     *
     * Activate Labeling/Branding Settings.
     *
     */
    public function testAdminServiceActivateLabelPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddCustomDomainPolicy
     *
     * Set a Domain Settings for an Organization.
     *
     */
    public function testAdminServiceAddCustomDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddCustomOrgIAMPolicy
     *
     * Add Custom Org IAM Policy.
     *
     */
    public function testAdminServiceAddCustomOrgIAMPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddIDPToLoginPolicy
     *
     * Add Linked Identity Provider.
     *
     */
    public function testAdminServiceAddIDPToLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddMultiFactorToLoginPolicy
     *
     * Add Multi-Factor (MFA).
     *
     */
    public function testAdminServiceAddMultiFactorToLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddNotificationPolicy
     *
     * Add Notification Settings.
     *
     */
    public function testAdminServiceAddNotificationPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddOIDCSettings
     *
     * Add OIDC Settings.
     *
     */
    public function testAdminServiceAddOIDCSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceAddSecondFactorToLoginPolicy
     *
     * Add Second Factor (2FA).
     *
     */
    public function testAdminServiceAddSecondFactorToLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetCustomDomainPolicy
     *
     * Get Domain Settings for Organization.
     *
     */
    public function testAdminServiceGetCustomDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetCustomOrgIAMPolicy
     *
     * Get Org IAM Policy.
     *
     */
    public function testAdminServiceGetCustomOrgIAMPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetDefaultOrg
     *
     * Get Default Organization.
     *
     */
    public function testAdminServiceGetDefaultOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetDomainPolicy
     *
     * Get Domain Settings.
     *
     */
    public function testAdminServiceGetDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetLockoutPolicy
     *
     * Get Password Lockout Settings.
     *
     */
    public function testAdminServiceGetLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetNotificationPolicy
     *
     * Return Notification Settings.
     *
     */
    public function testAdminServiceGetNotificationPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetOIDCSettings
     *
     * Get OIDC Settings.
     *
     */
    public function testAdminServiceGetOIDCSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetOrgIAMPolicy
     *
     * Get Org IAM Policy.
     *
     */
    public function testAdminServiceGetOrgIAMPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetPasswordAgePolicy
     *
     * Get Password Age Settings.
     *
     */
    public function testAdminServiceGetPasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetPasswordComplexityPolicy
     *
     * Get Password Complexity Settings.
     *
     */
    public function testAdminServiceGetPasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetPreviewLabelPolicy
     *
     * Get Preview Private Labeling/Branding Settings.
     *
     */
    public function testAdminServiceGetPreviewLabelPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceGetSecurityPolicy
     *
     * Get Security Settings.
     *
     */
    public function testAdminServiceGetSecurityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceListLoginPolicyIDPs
     *
     * List Linked Identity Providers.
     *
     */
    public function testAdminServiceListLoginPolicyIDPs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceListLoginPolicyMultiFactors
     *
     * List Multi-factors (MFA).
     *
     */
    public function testAdminServiceListLoginPolicyMultiFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceListLoginPolicySecondFactors
     *
     * List Second Factors (2FA).
     *
     */
    public function testAdminServiceListLoginPolicySecondFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveIDPFromLoginPolicy
     *
     * Remove Linked Identity Provider.
     *
     */
    public function testAdminServiceRemoveIDPFromLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveLabelPolicyFont
     *
     * Remove Font.
     *
     */
    public function testAdminServiceRemoveLabelPolicyFont()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveLabelPolicyIcon
     *
     * Remove Icon Light.
     *
     */
    public function testAdminServiceRemoveLabelPolicyIcon()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveLabelPolicyIconDark
     *
     * Remove Icon Dark.
     *
     */
    public function testAdminServiceRemoveLabelPolicyIconDark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveLabelPolicyLogo
     *
     * Remove Logo Light.
     *
     */
    public function testAdminServiceRemoveLabelPolicyLogo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveLabelPolicyLogoDark
     *
     * Remove Logo Dark.
     *
     */
    public function testAdminServiceRemoveLabelPolicyLogoDark()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveMultiFactorFromLoginPolicy
     *
     * Remove Multi-factor (MFA).
     *
     */
    public function testAdminServiceRemoveMultiFactorFromLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceRemoveSecondFactorFromLoginPolicy
     *
     * Remove Second Factor (2FA).
     *
     */
    public function testAdminServiceRemoveSecondFactorFromLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceResetCustomDomainPolicyToDefault
     *
     * Reset Domain Settings of Organization.
     *
     */
    public function testAdminServiceResetCustomDomainPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceResetCustomOrgIAMPolicyToDefault
     *
     * Reset Domain Settings of Organization.
     *
     */
    public function testAdminServiceResetCustomOrgIAMPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceSetDefaultOrg
     *
     * Set Default Organization.
     *
     */
    public function testAdminServiceSetDefaultOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceSetSecurityPolicy
     *
     * Set Security Settings.
     *
     */
    public function testAdminServiceSetSecurityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateCustomDomainPolicy
     *
     * Update Domain Settings for Organization.
     *
     */
    public function testAdminServiceUpdateCustomDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateCustomOrgIAMPolicy
     *
     * Update Custom Org IAM Policy.
     *
     */
    public function testAdminServiceUpdateCustomOrgIAMPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateDomainPolicy
     *
     * Update Domain Settings.
     *
     */
    public function testAdminServiceUpdateDomainPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateLabelPolicy
     *
     * Update Labeling/Branding Settings.
     *
     */
    public function testAdminServiceUpdateLabelPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateLockoutPolicy
     *
     * Update Password Lockout Settings.
     *
     */
    public function testAdminServiceUpdateLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateLoginPolicy
     *
     * Update Login Settings.
     *
     */
    public function testAdminServiceUpdateLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateNotificationPolicy
     *
     * Update Notification Settings.
     *
     */
    public function testAdminServiceUpdateNotificationPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateOIDCSettings
     *
     * Add OIDC Settings.
     *
     */
    public function testAdminServiceUpdateOIDCSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdateOrgIAMPolicy
     *
     * Update Org IAM Policy.
     *
     */
    public function testAdminServiceUpdateOrgIAMPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdatePasswordAgePolicy
     *
     * Update Password Age Settings.
     *
     */
    public function testAdminServiceUpdatePasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdatePasswordComplexityPolicy
     *
     * Update Password Complexity Settings.
     *
     */
    public function testAdminServiceUpdatePasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminServiceUpdatePrivacyPolicy
     *
     * Update Privacy Settings.
     *
     */
    public function testAdminServiceUpdatePrivacyPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomLabelPolicy
     *
     * Create Labeling/Branding Settings.
     *
     */
    public function testManagementServiceAddCustomLabelPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomLockoutPolicy
     *
     * Add Password Lockout Settings.
     *
     */
    public function testManagementServiceAddCustomLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomLoginPolicy
     *
     * Create Custom Login Settings.
     *
     */
    public function testManagementServiceAddCustomLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomPasswordAgePolicy
     *
     * Add Password Age Settings.
     *
     */
    public function testManagementServiceAddCustomPasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomPasswordComplexityPolicy
     *
     * Create Password Complexity Settings.
     *
     */
    public function testManagementServiceAddCustomPasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceAddCustomPrivacyPolicy
     *
     * Add Privacy Settings.
     *
     */
    public function testManagementServiceAddCustomPrivacyPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultLabelPolicy
     *
     * Get Default Private Labeling/Branding Settings.
     *
     */
    public function testManagementServiceGetDefaultLabelPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultLockoutPolicy
     *
     * Get Default Password Lockout Settings.
     *
     */
    public function testManagementServiceGetDefaultLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultLoginPolicy
     *
     * Get Default Login Settings.
     *
     */
    public function testManagementServiceGetDefaultLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultNotificationPolicy
     *
     * Get Default Notification Settings.
     *
     */
    public function testManagementServiceGetDefaultNotificationPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultPasswordAgePolicy
     *
     * Get Default Password Age Settings.
     *
     */
    public function testManagementServiceGetDefaultPasswordAgePolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultPasswordComplexityPolicy
     *
     * Get Default Password Complexity Settings.
     *
     */
    public function testManagementServiceGetDefaultPasswordComplexityPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceGetDefaultPrivacyPolicy
     *
     * Get Default Privacy Settings.
     *
     */
    public function testManagementServiceGetDefaultPrivacyPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceListLoginPolicyMultiFactors
     *
     * List Multi-factors (MFA).
     *
     */
    public function testManagementServiceListLoginPolicyMultiFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveIDPFromLoginPolicy
     *
     * Remove Linked Identity Provider.
     *
     */
    public function testManagementServiceRemoveIDPFromLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveMultiFactorFromLoginPolicy
     *
     * Remove Multi-factor (MFA).
     *
     */
    public function testManagementServiceRemoveMultiFactorFromLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceRemoveSecondFactorFromLoginPolicy
     *
     * Remove Second Factor (2FA).
     *
     */
    public function testManagementServiceRemoveSecondFactorFromLoginPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetLabelPolicyToDefault
     *
     * Reset Labeling/Branding Settings.
     *
     */
    public function testManagementServiceResetLabelPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetLockoutPolicyToDefault
     *
     * Reset Password Lockout Settings to Default.
     *
     */
    public function testManagementServiceResetLockoutPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetLoginPolicyToDefault
     *
     * Reset Custom Login Settings to Default.
     *
     */
    public function testManagementServiceResetLoginPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetNotificationPolicyToDefault
     *
     * Reset Notification Settings to Default.
     *
     */
    public function testManagementServiceResetNotificationPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetPasswordAgePolicyToDefault
     *
     * Reset Password Age Settings to Default.
     *
     */
    public function testManagementServiceResetPasswordAgePolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetPasswordComplexityPolicyToDefault
     *
     * Reset Password Complexity Settings to Default.
     *
     */
    public function testManagementServiceResetPasswordComplexityPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceResetPrivacyPolicyToDefault
     *
     * Reset Privacy Settings to Default.
     *
     */
    public function testManagementServiceResetPrivacyPolicyToDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for managementServiceUpdateCustomLockoutPolicy
     *
     * Update Password Lockout Settings.
     *
     */
    public function testManagementServiceUpdateCustomLockoutPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for settingsServiceGetSecuritySettings
     *
     * Get Security Settings.
     *
     */
    public function testSettingsServiceGetSecuritySettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for settingsServiceSetSecuritySettings
     *
     * Set Security Settings.
     *
     */
    public function testSettingsServiceSetSecuritySettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
